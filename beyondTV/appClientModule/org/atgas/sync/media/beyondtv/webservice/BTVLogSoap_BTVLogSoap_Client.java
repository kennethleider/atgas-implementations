
package com.snapstream.webservice;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.0
 * 2011-05-05T12:55:10.563-06:00
 * Generated source version: 2.4.0
 * 
 */
public final class BTVLogSoap_BTVLogSoap_Client {

    private static final QName SERVICE_NAME = new QName("http://www.snapstream.com/WebService", "BTVLog");

    private BTVLogSoap_BTVLogSoap_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = BTVLog.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        BTVLog ss = new BTVLog(wsdlURL, SERVICE_NAME);
        BTVLogSoap port = ss.getBTVLogSoap();  
        
        {
        System.out.println("Invoking dismissAllErrors...");
        java.lang.String _dismissAllErrors_authTicket = "";
        port.dismissAllErrors(_dismissAllErrors_authTicket);


        }
        {
        System.out.println("Invoking writeLogMessagesToDisk...");
        java.lang.String _writeLogMessagesToDisk_authTicket = "";
        port.writeLogMessagesToDisk(_writeLogMessagesToDisk_authTicket);


        }
        {
        System.out.println("Invoking logError...");
        java.lang.String _logError_authTicket = "";
        long _logError_ulErrorCode = 0;
        int _logError_bUnique = 0;
        int _logError_bUniqueDesc = 0;
        java.lang.String _logError_bstrErrStr = "";
        port.logError(_logError_authTicket, _logError_ulErrorCode, _logError_bUnique, _logError_bUniqueDesc, _logError_bstrErrStr);


        }
        {
        System.out.println("Invoking dismissError...");
        java.lang.String _dismissError_authTicket = "";
        java.math.BigInteger _dismissError_timestamp = new java.math.BigInteger("0");
        long _dismissError_errorCode = 0;
        port.dismissError(_dismissError_authTicket, _dismissError_timestamp, _dismissError_errorCode);


        }
        {
        System.out.println("Invoking getNextErrorWithDescription...");
        java.lang.String _getNextErrorWithDescription_authTicket = "";
        java.math.BigInteger _getNextErrorWithDescription_startTime = new java.math.BigInteger("0");
        javax.xml.ws.Holder<java.lang.String> _getNextErrorWithDescription_getNextErrorWithDescriptionResult = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.math.BigInteger> _getNextErrorWithDescription_timestamp = new javax.xml.ws.Holder<java.math.BigInteger>();
        javax.xml.ws.Holder<java.lang.Long> _getNextErrorWithDescription_errorCode = new javax.xml.ws.Holder<java.lang.Long>();
        port.getNextErrorWithDescription(_getNextErrorWithDescription_authTicket, _getNextErrorWithDescription_startTime, _getNextErrorWithDescription_getNextErrorWithDescriptionResult, _getNextErrorWithDescription_timestamp, _getNextErrorWithDescription_errorCode);

        System.out.println("getNextErrorWithDescription._getNextErrorWithDescription_getNextErrorWithDescriptionResult=" + _getNextErrorWithDescription_getNextErrorWithDescriptionResult.value);
        System.out.println("getNextErrorWithDescription._getNextErrorWithDescription_timestamp=" + _getNextErrorWithDescription_timestamp.value);
        System.out.println("getNextErrorWithDescription._getNextErrorWithDescription_errorCode=" + _getNextErrorWithDescription_errorCode.value);

        }
        {
        System.out.println("Invoking writeLog...");
        java.lang.String _writeLog_authTicket = "";
        java.lang.String _writeLog_bstrMsg = "";
        port.writeLog(_writeLog_authTicket, _writeLog_bstrMsg);


        }
        {
        System.out.println("Invoking getNextError...");
        java.lang.String _getNextError_authTicket = "";
        java.math.BigInteger _getNextError_startTime = new java.math.BigInteger("0");
        javax.xml.ws.Holder<java.lang.String> _getNextError_getNextErrorResult = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.math.BigInteger> _getNextError_timestamp = new javax.xml.ws.Holder<java.math.BigInteger>();
        javax.xml.ws.Holder<java.lang.Long> _getNextError_errorCode = new javax.xml.ws.Holder<java.lang.Long>();
        port.getNextError(_getNextError_authTicket, _getNextError_startTime, _getNextError_getNextErrorResult, _getNextError_timestamp, _getNextError_errorCode);

        System.out.println("getNextError._getNextError_getNextErrorResult=" + _getNextError_getNextErrorResult.value);
        System.out.println("getNextError._getNextError_timestamp=" + _getNextError_timestamp.value);
        System.out.println("getNextError._getNextError_errorCode=" + _getNextError_errorCode.value);

        }
        {
        System.out.println("Invoking reactivateIgnoredErrors...");
        java.lang.String _reactivateIgnoredErrors_authTicket = "";
        port.reactivateIgnoredErrors(_reactivateIgnoredErrors_authTicket);


        }
        {
        System.out.println("Invoking getNextMessage...");
        java.lang.String _getNextMessage_authTicket = "";
        java.math.BigInteger _getNextMessage_pqwStartVal = new java.math.BigInteger("0");
        javax.xml.ws.Holder<java.math.BigInteger> _getNextMessage_pqwStart = new javax.xml.ws.Holder<java.math.BigInteger>(_getNextMessage_pqwStartVal);
        javax.xml.ws.Holder<java.lang.String> _getNextMessage_getNextMessageResult = new javax.xml.ws.Holder<java.lang.String>();
        port.getNextMessage(_getNextMessage_authTicket, _getNextMessage_pqwStart, _getNextMessage_getNextMessageResult);

        System.out.println("getNextMessage._getNextMessage_pqwStart=" + _getNextMessage_pqwStart.value);
        System.out.println("getNextMessage._getNextMessage_getNextMessageResult=" + _getNextMessage_getNextMessageResult.value);

        }
        {
        System.out.println("Invoking writeLogUser...");
        java.lang.String _writeLogUser_authTicket = "";
        java.lang.String _writeLogUser_bstrMsg = "";
        port.writeLogUser(_writeLogUser_authTicket, _writeLogUser_bstrMsg);


        }
        {
        System.out.println("Invoking writeChange...");
        java.lang.String _writeChange_authTicket = "";
        java.lang.String _writeChange_bstrSetting = "";
        java.lang.String _writeChange_bstrOldValue = "";
        java.lang.String _writeChange_bstrNewValue = "";
        port.writeChange(_writeChange_authTicket, _writeChange_bstrSetting, _writeChange_bstrOldValue, _writeChange_bstrNewValue);


        }
        {
        System.out.println("Invoking ignoreError...");
        java.lang.String _ignoreError_authTicket = "";
        long _ignoreError_errorCode = 0;
        port.ignoreError(_ignoreError_authTicket, _ignoreError_errorCode);


        }

        System.exit(0);
    }

}
