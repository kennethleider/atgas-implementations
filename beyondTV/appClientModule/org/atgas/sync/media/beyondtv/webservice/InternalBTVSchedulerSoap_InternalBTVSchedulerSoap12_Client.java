
package com.snapstream.webservice;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.0
 * 2011-05-05T12:56:21.769-06:00
 * Generated source version: 2.4.0
 * 
 */
public final class InternalBTVSchedulerSoap_InternalBTVSchedulerSoap12_Client {

    private static final QName SERVICE_NAME = new QName("http://www.snapstream.com/WebService", "InternalBTVScheduler");

    private InternalBTVSchedulerSoap_InternalBTVSchedulerSoap12_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = InternalBTVScheduler.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        InternalBTVScheduler ss = new InternalBTVScheduler(wsdlURL, SERVICE_NAME);
        InternalBTVSchedulerSoap port = ss.getInternalBTVSchedulerSoap12();  
        
        {
        System.out.println("Invoking addNotificationRecordings...");
        long _addNotificationRecordings_l = 0;
        java.lang.String _addNotificationRecordings_s = "";
        java.lang.String _addNotificationRecordings_episodes = "";
        port.addNotificationRecordings(_addNotificationRecordings_l, _addNotificationRecordings_s, _addNotificationRecordings_episodes);


        }
        {
        System.out.println("Invoking getEpisodesByKeywordWithLimit...");
        long _getEpisodesByKeywordWithLimit_l = 0;
        java.lang.String _getEpisodesByKeywordWithLimit_s = "";
        java.lang.String _getEpisodesByKeywordWithLimit_keyword = "";
        long _getEpisodesByKeywordWithLimit_limit = 0;
        java.lang.String _getEpisodesByKeywordWithLimit__return = port.getEpisodesByKeywordWithLimit(_getEpisodesByKeywordWithLimit_l, _getEpisodesByKeywordWithLimit_s, _getEpisodesByKeywordWithLimit_keyword, _getEpisodesByKeywordWithLimit_limit);
        System.out.println("getEpisodesByKeywordWithLimit.result=" + _getEpisodesByKeywordWithLimit__return);


        }
        {
        System.out.println("Invoking getLastIndexChanged...");
        long _getLastIndexChanged_l = 0;
        java.lang.String _getLastIndexChanged_s = "";
        java.math.BigInteger _getLastIndexChanged__return = port.getLastIndexChanged(_getLastIndexChanged_l, _getLastIndexChanged_s);
        System.out.println("getLastIndexChanged.result=" + _getLastIndexChanged__return);


        }

        System.exit(0);
    }

}
